<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace FastPix\Sdk\Models\Components;


/** SimulcastResponseData - Displays the result of the request. */
class SimulcastResponseData
{
    /**
     * When you create the new simulcast, FastPix assign a universal unique identifier which can contain a maximum of 255 characters.
     *
     * @var ?string $simulcastId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('simulcastId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $simulcastId = null;

    /**
     * The RTMP hostname, combined with the application name, is crucial for connecting to third-party live streaming services and transmitting the live stream.
     *
     * @var ?string $url
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('url')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $url = null;

    /**
     * A unique stream key is generated for streaming, allowing the user to start streaming on any third-party platform using this key.
     *
     * @var ?string $streamKey
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('streamKey')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $streamKey = null;

    /**
     * When the value is true, the simulcast will be enabled for the given stream
     *
     * @var ?bool $isEnabled
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('isEnabled')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $isEnabled = null;

    /**
     * Arbitrary user-supplied metadata that will be included in the simulcast details. Can be used to store your own ID for a video along with the simulcast. Max:255 characters, Upto 10 entries are allowed.
     *
     * @var ?SimulcastResponseMetadata $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('\FastPix\Sdk\Models\Components\SimulcastResponseMetadata|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SimulcastResponseMetadata $metadata = null;

    /**
     * @param  ?string  $simulcastId
     * @param  ?string  $url
     * @param  ?string  $streamKey
     * @param  ?bool  $isEnabled
     * @param  ?SimulcastResponseMetadata  $metadata
     * @phpstan-pure
     */
    public function __construct(?string $simulcastId = null, ?string $url = null, ?string $streamKey = null, ?bool $isEnabled = null, ?SimulcastResponseMetadata $metadata = null)
    {
        $this->simulcastId = $simulcastId;
        $this->url = $url;
        $this->streamKey = $streamKey;
        $this->isEnabled = $isEnabled;
        $this->metadata = $metadata;
    }
}